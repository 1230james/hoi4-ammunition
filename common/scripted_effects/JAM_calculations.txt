# Ugly code warning :(

# Constants
# All ammo usage quantities are in thousands per day
@JAM_fallback_ammo = 0.02

# Consumption multipliers
# Use for quick blanket balancing
@JAM_army_ammo_mult = 1
@JAM_navy_ammo_mult = 0.75
@JAM_air_ammo_mult  = 0.25

# Army ammo usage
@JAM_army_LTK_ammo = 0.03 # Light tank
@JAM_army_MTK_ammo = 0.04 # Medium tank
@JAM_army_HTK_ammo = 0.05 # Heavy tank
@JAM_army_STK_ammo = 0.06 # Super-heavy tank
@JAM_army_OTK_ammo = 0.05 # Modern armor

@JAM_army_LAR_ammo = 0.05 # Light SPG
@JAM_army_MAR_ammo = 0.06 # Medium SPG
@JAM_army_HAR_ammo = 0.07 # Heavy SPG
@JAM_army_SAR_ammo = 0.08 # Super-heavy SPG
@JAM_army_OAR_ammo = 0.07 # Modern SPG

@JAM_army_LAA_ammo = 0.03 # Light SPAA
@JAM_army_MAA_ammo = 0.04 # Medium SPAA
@JAM_army_HAA_ammo = 0.05 # Heavy SPAA
@JAM_army_SAA_ammo = 0.06 # Super-heavy SPAA
@JAM_army_OAA_ammo = 0.05 # Modern SPAA

@JAM_army_LTD_ammo = 0.03 # Light TD
@JAM_army_MTD_ammo = 0.04 # Medium TD
@JAM_army_HTD_ammo = 0.05 # Heavy TD
@JAM_army_STD_ammo = 0.06 # Super-heavy TD
@JAM_army_OTD_ammo = 0.05 # Modern TD

@JAM_army_ATK_ammo = 0.03 # Amphibious tank
@JAM_army_LAM_ammo = 0.03 # Light amphibious
@JAM_army_MAM_ammo = 0.04 # Medium amphibious
@JAM_army_HAM_ammo = 0.05 # Heavy amphibious

@JAM_army_LFT_ammo = 0.03 # Light flame tank
@JAM_army_MFT_ammo = 0.04 # Medium flame tank
@JAM_army_HFT_ammo = 0.05 # Heavy flame tank

@JAM_army_INF_ammo = 0.01 # Infantry
@JAM_army_BIC_ammo = 0.01 # Bike battalion
@JAM_army_MRN_ammo = 0.01 # Marines
@JAM_army_MRC_ammo = 0.01 # Marine commandos
@JAM_army_MTN_ammo = 0.01 # Mountaineers
@JAM_army_PAR_ammo = 0.01 # Paratroopers
@JAM_army_PEN_ammo = 0.01 # Penal battalion (USSR?)
@JAM_army_IRR_ammo = 0.00 # Irregulars (Ethiopia?)
@JAM_army_MIL_ammo = 0.01 # Militia
@JAM_army_BAB_ammo = 0.01 # Assault battalion (Italy)

@JAM_army_MOT_ammo = 0.01 # Motorized infantry
@JAM_army_MEC_ammo = 0.02 # Mechanized infantry
@JAM_army_AMT_ammo = 0.02 # Amtracs

@JAM_army_CAV_ammo = 0.01 # Cavalry
@JAM_army_CAM_ammo = 0.01 # Camelry
@JAM_army_CAR_ammo = 0.02 # Armored car

@JAM_army_AA_ammo  = 0.03 # Support anti-air
@JAM_army_ANA_ammo = 0.03 # Line anti-air
@JAM_army_MTA_ammo = 0.03 # Motorized anti-air # MAA abbreviation already used for medium SPAA

@JAM_army_SAT_ammo = 0.04 # Support artillery # Turns out the ART abbreviation has a duplicate usage
@JAM_army_ART_ammo = 0.05 # Line artillery
@JAM_army_MRT_ammo = 0.05 # Motorized artillery

@JAM_army_RART_ammo = 0.07 # Support rocket arty
@JAM_army_RRT_ammo  = 0.07 # Line rocket arty
@JAM_army_TRA_ammo  = 0.07 # Motorized rocket arty (truck-drawn)
@JAM_army_MRA_ammo  = 0.07 # Truck-mounted rocket arty (katyushas)

@JAM_army_AT_ammo  = 0.03 # Support anti-tank
@JAM_army_ANT_ammo = 0.04 # Line Anti-tank
@JAM_army_MAT_ammo = 0.04 # Motorized anti-tank

@JAM_army_CREC_ammo = 0.01 # Cav recon
@JAM_army_MREC_ammo = 0.02 # Motorized recon
@JAM_army_AREC_ammo = 0.02 # Armored car recon
@JAM_army_TREC_ammo = 0.03 # Light tank recon

@JAM_army_MP_ammo  = 0.01 # Military Police
@JAM_army_LTA_ammo = 0.03 # Airborne light tanks
@JAM_army_RAN_ammo = 0.01 # Rangers
@JAM_army_WIN_ammo = 0.01 # Winter logi (Finland?)
@JAM_army_LRP_ammo = 0.01 # Long-range patrol (Finland)

@JAM_army_RWG_ammo = 0.1 # Railway gun

@JAM_army_LOG_ammo = 0 # Logistics # logiman logiman pls deliver more mammons logiman
@JAM_army_ENG_ammo = 0 # Engineers
@JAM_army_PIO_ammo = 0 # Pioneers
@JAM_army_BUS_ammo = 0 # Per Albin bus
@JAM_army_HOS_ammo = 0 # Field hospital
@JAM_army_SIG_ammo = 0 # Signal company

# Navy ammo usage
@JAM_navy_CV_ammo = 0.04 # Carrier
@JAM_navy_BB_ammo = 0.1  # Battleship
@JAM_navy_BC_ammo = 0.1  # Battlecruiser
@JAM_navy_CA_ammo = 0.08 # Heavy cruiser
@JAM_navy_CL_ammo = 0.07 # Light cruiser
@JAM_navy_DD_ammo = 0.05 # Destroyer
@JAM_navy_SS_ammo = 0.04 # Submarine

# Air ammo usage
@JAM_air_FTR_ammo = 0.04 # Fighter
@JAM_air_CVF_ammo = 0.04 # CV Fighter
@JAM_air_CAS_ammo = 0.04 # CAS
@JAM_air_CVC_ammo = 0.04 # CV CAS
@JAM_air_NAV_ammo = 0.05 # Naval bomber
@JAM_air_CVN_ammo = 0.05 # CV Naval bomber
@JAM_air_KMK_ammo = 0.04 # Suicide craft (Kamikaze)
@JAM_air_CKM_ammo = 0.04 # CV suicide craft

@JAM_air_TAB_ammo = 0.05 # Tac bomber
@JAM_air_HFT_ammo = 0.05 # Heavy fighter
@JAM_air_SCP_ammo = 0.04 # Scout plane

@JAM_air_STB_ammo = 0.08 # Strat bomber
@JAM_air_MPP_ammo = 0.04 # Maritime patrol plane

@JAM_air_JFT_ammo = 0.04 # Jet fighter
@JAM_air_JTB_ammo = 0.05 # Jet tac bomber
@JAM_air_JSB_ammo = 0.08 # Jet strat bomber

@JAM_air_RIT_ammo = 0 # Rocket interceptor
@JAM_air_TRP_ammo = 0 # Transport
@JAM_air_GDM_ammo = 0 # Guided missile

# Determine total current ammo demand of the army
# Outputs the following values to the listed variables:
#   JAM_army_ammo_demand_now: Total qty. of ammo demanded right now, in thousands
#   JAM_army_ammo_demand_max: Total qty. of ammo demanded if at maximum demand, in thousands
JAM_se_calculate_army_ammo_demand = {
    # Declaring some working variables
    set_temp_variable = {
        var   = total_units
        value = num_battalions
    }
    set_temp_variable = {
        var   = total_demand
        value = 0
    }
    set_temp_variable = {
        var   = temp_units
        value = 0
    }
    set_temp_variable = {
        var   = temp_demand
        value = 0
    }
    
    # Calculate total possible demand
    if = {
        limit = {
            check_variable = { total_units > 0 }
        }
        
        # Tanks
        set_temp_variable = { temp_units  = num_battalions_with_type@light_armor }
        set_temp_variable = { temp_demand = @JAM_army_LTK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@medium_armor }
        set_temp_variable = { temp_demand = @JAM_army_MTK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@heavy_armor }
        set_temp_variable = { temp_demand = @JAM_army_HTK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@super_heavy_armor }
        set_temp_variable = { temp_demand = @JAM_army_STK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@modern_armor }
        set_temp_variable = { temp_demand = @JAM_army_OTK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # SPG
        set_temp_variable = { temp_units  = num_battalions_with_type@light_sp_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_LAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@medium_sp_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@heavy_sp_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_HAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@super_heavy_sp_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_SAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@modern_sp_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_OAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # SPAA
        set_temp_variable = { temp_units  = num_battalions_with_type@light_sp_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_LAA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@medium_sp_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MAA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@heavy_sp_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_HAA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_SAA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@modern_sp_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_OAA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # TD
        set_temp_variable = { temp_units  = num_battalions_with_type@light_tank_destroyer_brigade }
        set_temp_variable = { temp_demand = @JAM_army_LTD_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@medium_tank_destroyer_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MTD_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@heavy_tank_destroyer_brigade }
        set_temp_variable = { temp_demand = @JAM_army_HTD_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
        set_temp_variable = { temp_demand = @JAM_army_STD_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@modern_tank_destroyer_brigade }
        set_temp_variable = { temp_demand = @JAM_army_OTD_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Amphibious tanks
        set_temp_variable = { temp_units  = num_battalions_with_type@amphibious_armor }
        set_temp_variable = { temp_demand = @JAM_army_ATK_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@amphibious_light_armor }
        set_temp_variable = { temp_demand = @JAM_army_LAM_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@amphibious_medium_armor }
        set_temp_variable = { temp_demand = @JAM_army_MAM_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@amphibious_heavy_armor }
        set_temp_variable = { temp_demand = @JAM_army_HAM_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Flame tanks
        set_temp_variable = { temp_units  = num_battalions_with_type@light_flame_tank }
        set_temp_variable = { temp_demand = @JAM_army_LFT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@medium_flame_tank }
        set_temp_variable = { temp_demand = @JAM_army_MFT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@heavy_flame_tank }
        set_temp_variable = { temp_demand = @JAM_army_HFT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Infantry
        set_temp_variable = { temp_units  = num_battalions_with_type@infantry }
        set_temp_variable = { temp_demand = @JAM_army_INF_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@bicycle_battalion }
        set_temp_variable = { temp_demand = @JAM_army_BIC_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@marine }
        set_temp_variable = { temp_demand = @JAM_army_MRN_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@marine_commando }
        set_temp_variable = { temp_demand = @JAM_army_MRC_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mountaineers }
        set_temp_variable = { temp_demand = @JAM_army_MTN_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@paratrooper }
        set_temp_variable = { temp_demand = @JAM_army_PAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@penal_battalion }
        set_temp_variable = { temp_demand = @JAM_army_PEN_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@irregular_infantry }
        set_temp_variable = { temp_demand = @JAM_army_IRR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@militia }
        set_temp_variable = { temp_demand = @JAM_army_MIL_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@blackshirt_assault_battalion }
        set_temp_variable = { temp_demand = @JAM_army_BAB_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Motorized
        set_temp_variable = { temp_units  = num_battalions_with_type@motorized }
        set_temp_variable = { temp_demand = @JAM_army_MOT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mechanized }
        set_temp_variable = { temp_demand = @JAM_army_MEC_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@amphibious_mechanized }
        set_temp_variable = { temp_demand = @JAM_army_AMT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Cavalry
        set_temp_variable = { temp_units  = num_battalions_with_type@cavalry }
        set_temp_variable = { temp_demand = @JAM_army_CAV_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@camelry }
        set_temp_variable = { temp_demand = @JAM_army_CAM_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Armored car
        set_temp_variable = { temp_units  = num_battalions_with_type@motorized }
        set_temp_variable = { temp_demand = @JAM_army_CAR_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # AA
        set_temp_variable = { temp_units  = num_battalions_with_type@anti_air }
        set_temp_variable = { temp_demand = @JAM_army_AA_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_ANA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mot_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MTA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Arty
        set_temp_variable = { temp_units  = num_battalions_with_type@artillery }
        set_temp_variable = { temp_demand = @JAM_army_SAT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_ART_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mot_anti_air_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MRT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Rockets
        set_temp_variable = { temp_units  = num_battalions_with_type@rocket_artillery }
        set_temp_variable = { temp_demand = @JAM_army_RART_ammo   }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@rocket_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_RRT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mot_rocket_artillery_brigade }
        set_temp_variable = { temp_demand = @JAM_army_TRA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@motorized_rocket_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MRA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # AT
        set_temp_variable = { temp_units  = num_battalions_with_type@anti_tank }
        set_temp_variable = { temp_demand = @JAM_army_AT_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@anti_tank_brigade }
        set_temp_variable = { temp_demand = @JAM_army_ANT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mot_anti_tank_brigade }
        set_temp_variable = { temp_demand = @JAM_army_MAT_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Recon
        set_temp_variable = { temp_units  = num_battalions_with_type@recon }
        set_temp_variable = { temp_demand = @JAM_army_CREC_ammo   }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@mot_recon }
        set_temp_variable = { temp_demand = @JAM_army_MREC_ammo   }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@armored_car_recon }
        set_temp_variable = { temp_demand = @JAM_army_AREC_ammo   }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@light_tank_recon }
        set_temp_variable = { temp_demand = @JAM_army_TREC_ammo   }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Misc. support battalions
        set_temp_variable = { temp_units  = num_battalions_with_type@military_police }
        set_temp_variable = { temp_demand = @JAM_army_MP_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@airborne_light_armor }
        set_temp_variable = { temp_demand = @JAM_army_LTA_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@rangers_support }
        set_temp_variable = { temp_demand = @JAM_army_RAN_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@winter_logistics_support }
        set_temp_variable = { temp_demand = @JAM_army_WIN_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_battalions_with_type@long_range_patrol_support }
        set_temp_variable = { temp_demand = @JAM_army_LRP_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Railway guns
        set_temp_variable = { temp_units  = num_battalions_with_type@railway_gun }
        set_temp_variable = { temp_demand = @JAM_army_RWG_ammo    }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Misc. ammo-less
        set_temp_variable = { temp_units = num_battalions_with_type@logistics_company }
        subtract_from_temp_variable = { total_units = temp_units }
        
        set_temp_variable = { temp_units = num_battalions_with_type@engineer }
        subtract_from_temp_variable = { total_units = temp_units }
        
        set_temp_variable = { temp_units = num_battalions_with_type@pioneer_support }
        subtract_from_temp_variable = { total_units = temp_units }
        
        set_temp_variable = { temp_units = num_battalions_with_type@bus }
        subtract_from_temp_variable = { total_units = temp_units }
        
        set_temp_variable = { temp_units = num_battalions_with_type@field_hospital }
        subtract_from_temp_variable = { total_units = temp_units }
        
        set_temp_variable = { temp_units = num_battalions_with_type@signal_company }
        subtract_from_temp_variable = { total_units = temp_units }
        
        # Fallback
        if = {
            limit = {
                check_variable = { total_units > 0 }
            }
            set_temp_variable = { temp_demand = @JAM_fallback_ammo    }
            multiply_temp_variable = { temp_demand      = total_units }
            add_to_temp_variable   = { total_demand     = temp_demand }
            subtract_from_temp_variable = { total_units = temp_units  }
        }
        
        # Balancing multiplier
        multiply_temp_variable = { total_demand = @JAM_army_ammo_mult }
        
        # Record theoretical max demand
        set_variable = {
            var   = JAM_army_ammo_demand_max
            value = total_demand
        }
        
        # Calculate current demand
        # Current working theory: just take the % of troops currently in combat and scale the ammo use by that
        # This is how the OG Ammunition and Ebby's Ammunition mods do it; I don't think there's a better way than that
        # since it is currently impossible to tell which individual units are in battle (or doing anything besides
        # idling) and which aren't.
        # Also adds a penalty for any units without a general because we can only get the current units in combat which
        # are led by a commander, and we want to penalize players for trying to cheat the game. Ebby's (and probably the
        # original) already do this by making all leaderless units count as units in defensive combat, but I want to
        # make this penalty smaller.
        set_temp_variable = {
            total_units = num_divisions
        }
        set_temp_variable = {
            total_demand = 0
        }
        set_temp_variable = {
            temp_units = 0
        }
        set_temp_variable = {
            atk_units = 0
        }
        set_temp_variable = {
            def_units = 0
        }
        set_temp_variable = {
            no_leader_units = num_divisions
        }
        
        # Sum up units
        every_army_leader = {
            limit = {
                is_leading_army_group = no
            }
            subtract_from_temp_variable = { no_leader_units = num_units }
            add_to_temp_variable = { atk_units = num_units_offensive_combats }
            add_to_temp_variable = { def_units = num_units_defensive_combats }
        }
        
        # Leaderless: 50% consumption
        set_temp_variable      = { temp_units   = no_leader_units }
        multiply_temp_variable = { temp_units   = 0.5 }
        add_to_temp_variable   = { total_demand = temp_units }
        
        # Defending: 100% consumption
        add_to_temp_variable   = { total_demand = def_units }
        
        # Attacking: 200% consumption
        set_temp_variable      = { temp_units   = atk_units }
        multiply_temp_variable = { temp_units   = 2 }
        add_to_temp_variable   = { total_demand = temp_units }
        
        # Calculate ratio
        divide_temp_variable = { total_demand = total_units }
    }
    else = {
        set_variable = {
            var   = JAM_army_ammo_demand_max
            value = 0
        }
    }
    
    # Final output
    set_variable = {
        var   = JAM_army_ammo_demand_now
        value = total_demand
    }
}

# Determine total current ammo demand of the navy
# Outputs the following values to the listed variables:
#   JAM_navy_ammo_demand_now: Total qty. of ammo demanded right now, in thousands; will always be 0 if not at war
#   JAM_navy_ammo_demand_max: Total qty. of ammo demanded if at maximum demand, in thousands
JAM_se_calculate_navy_ammo_demand = {
    # Declaring some working variables
    set_temp_variable = {
        var   = total_units
        value = num_ships
    }
    set_temp_variable = {
        var   = total_demand
        value = 0
    }
    set_temp_variable = {
        var   = temp_units
        value = 0
    }
    set_temp_variable = {
        var   = temp_demand
        value = 0
    }
    
    # Calculate total possible demand
    if = {
        limit = {
            check_variable = { total_units > 0 }
        }
        
        set_temp_variable = { temp_units  = num_ships_with_type@carrier }
        set_temp_variable = { temp_demand = @JAM_navy_CV_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@battleship }
        set_temp_variable = { temp_demand = @JAM_navy_BB_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@battle_cruiser }
        set_temp_variable = { temp_demand = @JAM_navy_BC_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@heavy_cruiser }
        set_temp_variable = { temp_demand = @JAM_navy_CA_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@light_cruiser }
        set_temp_variable = { temp_demand = @JAM_navy_CL_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@destroyer }
        set_temp_variable = { temp_demand = @JAM_navy_DD_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_ships_with_type@submarine }
        set_temp_variable = { temp_demand = @JAM_navy_SS_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Fallback
        if = {
            limit = {
                check_variable = { total_units > 0 }
            }
            set_temp_variable = { temp_demand = @JAM_fallback_ammo    }
            multiply_temp_variable = { temp_demand      = total_units }
            add_to_temp_variable   = { total_demand     = temp_demand }
            subtract_from_temp_variable = { total_units = temp_units  }
        }
        
        # Balancing multiplier
        multiply_temp_variable = { total_demand = @JAM_navy_ammo_mult }
        
        # Record theoretical max demand
        set_variable = {
            var   = JAM_navy_ammo_demand_max
            value = total_demand
        }
        
        # Calculate current demand
        # Current working theory: find % of ships currently out on the seas (i.e. not docked)
        # It appears to be impossible to calculate which specific ships are in combat
        # Always returns 0 if not at war
        if = {
            limit = {
                has_war = yes
            }
            set_temp_variable = {
                total_units = num_ships
            }
            set_temp_variable = {
                temp_demand = num_ships
            }
            every_state = { # Subtracts total amount of docked ships from `temp_demand`
                limit = {
                    naval_base > 0
                }
                save_event_target_as = state_target
                ROOT = {
                    if = {
                        limit = {
                            ships_in_state_ports = {
                                size  > 0
                                state = event_target:state_target
                            }
                        }
                        set_temp_variable = { i = 0 }
                        while_loop_effect = {
                            limit = {
                                check_variable = { i < 100 }
                                ships_in_state_ports = {
                                    size  > i
                                    state = event_target:state_target
                                }
                            }
                            add_to_temp_variable = { i = 1 }
                        }
                        subtract_from_temp_variable = {
                            temp_demand = i
                        }
                    }
                }
            }
        }
        else = {
            set_temp_variable = {
                temp_demand = 0
            }
        }
        
        # Calculate ratio
        divide_temp_variable   = { temp_demand  = total_units }
        multiply_temp_variable = { total_demand = temp_demand }
    }
    else = {
        set_variable = {
            var   = JAM_navy_ammo_demand_max
            value = 0
        }
    }
    
    # Final output
    set_variable = {
        var   = JAM_navy_ammo_demand_now
        value = total_demand
    }
}

# Determine total current ammo demand of the air force
# Outputs the following values to the listed variables:
#   JAM_air_ammo_demand_now: Total qty. of ammo demanded right now, in thousands; will always be 0 if not at war
#   JAM_air_ammo_demand_max: Total qty. of ammo demanded if at maximum demand, in thousands
JAM_se_calculate_air_ammo_demand = {
    # Declaring some working variables
    set_temp_variable = {
        var   = total_units
        value = num_deployed_planes
    }
    set_temp_variable = {
        var   = total_demand
        value = 0
    }
    set_temp_variable = {
        var   = temp_units
        value = 0
    }
    set_temp_variable = {
        var   = temp_demand
        value = 0
    }
    
    # Calculate total possible demand
    if = {
        limit = {
            check_variable = { total_units > 0 }
        }
        
        # Small props
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@fighter }
        set_temp_variable = { temp_demand = @JAM_air_FTR_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@cv_fighter }
        set_temp_variable = { temp_demand = @JAM_air_CVF_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@cas }
        set_temp_variable = { temp_demand = @JAM_air_CAS_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@cv_cas }
        set_temp_variable = { temp_demand = @JAM_air_CVC_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@nav_bomber }
        set_temp_variable = { temp_demand = @JAM_air_NAV_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@cv_nav_bomber }
        set_temp_variable = { temp_demand = @JAM_air_CVN_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@suicide_craft }
        set_temp_variable = { temp_demand = @JAM_air_KMK_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@cv_suicide_craft }
        set_temp_variable = { temp_demand = @JAM_air_CKM_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Medium props
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@tac_bomber }
        set_temp_variable = { temp_demand = @JAM_air_TAB_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@heavy_fighter }
        set_temp_variable = { temp_demand = @JAM_air_HFT_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@scout_plane }
        set_temp_variable = { temp_demand = @JAM_air_SCP_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Heavy props
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@strat_bomber }
        set_temp_variable = { temp_demand = @JAM_air_STB_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@maritime_patrol_plane }
        set_temp_variable = { temp_demand = @JAM_air_MPP_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Jets
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@jet_fighter }
        set_temp_variable = { temp_demand = @JAM_air_JFT_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@jet_tac_bomber }
        set_temp_variable = { temp_demand = @JAM_air_JTB_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@jet_strat_bomber }
        set_temp_variable = { temp_demand = @JAM_air_JSB_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Misc. ammo-less
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@rocket_interceptor }
        set_temp_variable = { temp_demand = @JAM_air_RIT_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@transport_plane }
        set_temp_variable = { temp_demand = @JAM_air_TRP_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        set_temp_variable = { temp_units  = num_deployed_planes_with_type@guided_missile }
        set_temp_variable = { temp_demand = @JAM_air_GDM_ammo     }
        multiply_temp_variable = { temp_demand      = temp_units  }
        add_to_temp_variable   = { total_demand     = temp_demand }
        subtract_from_temp_variable = { total_units = temp_units  }
        
        # Fallback
        if = {
            limit = {
                check_variable = { total_units > 0 }
            }
            set_temp_variable = { temp_demand = @JAM_fallback_ammo    }
            multiply_temp_variable = { temp_demand      = total_units }
            add_to_temp_variable   = { total_demand     = temp_demand }
            subtract_from_temp_variable = { total_units = temp_units  }
        }
        
        # Balancing multiplier
        multiply_temp_variable = { total_demand = @JAM_air_ammo_mult }
        
        # Record theoretical max demand
        set_variable = {
            var   = JAM_air_ammo_demand_max
            value = total_demand
        }
        
        # Calculate current demand
        # Current working theory: deployed air wings consume ammo - I'm really not sure what else I could do lol
        # Always returns 0 if not at war
        if = {
            limit = {
                has_war = yes
            }
            # NOP
        }
        else = {
            set_temp_variable = {
                total_demand = 0
            }
        }
    }
    else = {
        set_variable = {
            var   = JAM_air_ammo_demand_max
            value = 0
        }
    }
    
    # Final output
    set_variable = {
        var   = JAM_air_ammo_demand_now
        value = total_demand
    }
}

# Debug
JAM_se_debug = {
    set_variable = {
        var   = JAM_debug_var
        value = 0
    }
    every_state = {
        limit = {
            naval_base > 0
        }
        save_event_target_as = state_target
        ROOT = {
            if = {
                limit = {
                    ships_in_state_ports = {
                        size  > 0
                        state = event_target:state_target
                    }
                }
                set_temp_variable = { i = 0 }
                while_loop_effect = {
                    limit = {
                        check_variable = { i < 100 }
                        ships_in_state_ports = {
                            size  > i
                            state = event_target:state_target
                        }
                    }
                    add_to_temp_variable = { i = 1 }
                }
                add_to_variable = {
                    ROOT.JAM_debug_var = i
                }
            }
        }
    }
}
